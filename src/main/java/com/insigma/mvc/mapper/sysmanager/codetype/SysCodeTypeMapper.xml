<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.insigma.mvc.dao.sysmanager.codetype.SysCodeTypeMapper">
    <!-- 获取全部代码类型 -->
    <select id="getInitcodetypeList"  resultType="CodeType" >
		select aaa100 code_type from v_code_type
	</select>
	
	<!-- 根据代码值及代码类型判断代码是否存在 -->
	<select id="getCodeValueByValue" parameterType="CodeValue" resultType="CodeValue" >
		 select * from code_value t where t.code_type=#{code_type} and t.code_value=#{code_value}
	</select>
	
	<!-- 通过代码类型获取对应代码   -->
	<select id="getInitCodeValueList" parameterType="CodeType" resultType="CodeValue" >
		 select aaa102 code_value ,aaa103 code_name,aaa105 par_code_value,aaa106 code_describe  from v_aa10 where aaa100=#{code_type}
		  <if test="filter != null">
	         and ${filter}
	      </if>
		 order by aaa102
	</select>
	
	<!-- 通过代码类型获取对应代码 -->
	<select id="queryCodeValueByCodeTypeAndParent" parameterType="CodeValue" resultType="CodeValue" >
		 select aaa102 code_value ,aaa103 code_name,aaa105 par_code_value  from v_aa10 where aaa100=#{code_type} and aaa105=#{par_code_value} order by aaa102
	</select>
	
	<!-- 代码树 -->
	<select id="getCodeValueTree"  parameterType="CodeValue" resultType="CodeValue" >
		select 
		code_type ,
		code_value id,
		code_name name, 
		nvl(code_describe,code_name) code_describe,
		par_code_value pid,
		decode(sign((select count(*) from code_value s where s.par_code_value=t.code_value)),'1','true','false') isparent
		from 
		code_value t where t.code_type=#{code_type} and par_code_value=#{par_code_value} order by t.code_value
	</select>
	
	
	<!-- 得到代码类型树 -->
	<select id="getCodeTypeTreeData" resultType="CodeType">
		 <![CDATA[ 
		select * from (
		    select 
		      code_type id ,
		      type_name||'('||code_type||')'||'('||decode(aae100,'1','<span style=''color:blue;margin-right:0px;''>有效</span>','<span style=''color:red;margin-right:0px;''>无效</span>')||')' name,
		      type_name,
		      code_group pid,
		      code_root_value,
		      'code_type' type,
		      aae100   
		    from code_type 
		    union all
		    select
		      TYPE_SORT_CODE id ,
		      TYPE_SORT_NAME||'('||TYPE_SORT_CODE||')'||'('||(select count(*) from code_type c where c.code_group=TYPE_SORT_CODE) ||')' name, 
		      TYPE_SORT_NAME type_name,
		      '' pid,
		      '' code_root_value ,
		      'code_type_sort' type, 
		      '1' aae100 
		    from code_type_sort  
	    )
	    ]]> 
	<where>
	  <if test="q_code_type != null">
         id like '%'||#{q_code_type}||'%' 
      </if>
      <if test="q_type_name != null">
         and type_name like '%'||#{q_type_name}||'%' 
      </if>
	</where>
	order by aae100 desc ,id
	
	</select>
	
	
	<!-- 通过代码类型获取代码明细信息 -->
	<select id="getCodeValueByType" parameterType="CodeType" resultType="CodeType" >
	 select
	    code_seq, 
		code_value id  , 
		code_name||'('||code_value||')' name,
		isParent
		from  (
		select a.code_seq , a.code_value,a.code_name, decode(sign((select count(*) from code_value s where s.par_code_value=a.code_value and s.code_type=#{code_type} )),'1','true','false')  isParent 
		from  code_value a  where  a.code_type=#{code_type}  
		<if test="q_code_value != null">
	         and code_value like '%'||#{q_code_value}||'%' 
	    </if>
	    <if test="q_code_name != null">
	         and code_name like '%'||#{q_code_name}||'%' 
	    </if>
		order by code_value 
		)  
	</select>
	
	<!-- 通过代码头节点+代码类型获取代码明细信息 -->
	<select id="getCodeValueByTypeAndRoot" parameterType="CodeType" resultType="CodeType" >
		 select 
		 code_seq ,
		 code_value id, 
		 code_name||'('||code_value||')' name,
		 isParent
		 from   (
		 select a.code_seq, a.code_value,a.code_name, decode(sign((select count(*) from code_value s where s.par_code_value=a.code_value and s.code_type=#{code_type}  )),'1','true','false')  isParent 
		 from code_value a  where a.par_code_value=#{code_root_value}  
		 and a.code_type=#{code_type}  
		 <if test="q_code_value != null">
	         and code_value like '%'||#{q_code_value}||'%' 
	     </if>
	     <if test="q_code_name != null">
	         and code_name like '%'||#{q_code_name}||'%' 
	     </if>
		 order by code_value )
	</select>
	
	
	<!-- 得到代码类型信息 -->
	<select id="getCodeTypeInfo"  parameterType="String" resultType="CodeType">
	select 
		code_type, 
		type_name,
		code_root_value,
		code_group  
	from code_type where code_type=#{code_type}
	</select>
	
	
	<!-- 新增代码类型 -->
	<insert id="addCodeType" parameterType="CodeType" >
	   insert into code_type(code_type,type_name,code_root_value,code_group,aae100)
	   values (#{code_type},#{type_name},#{code_root_value},#{code_group},'1')
	</insert>
	
	
	<!-- 更新代码类型 -->
	<update id="updateCodeType" parameterType="CodeType" >
	update code_type
	<set>
      <if test="type_name != null">
        type_name = #{type_name,jdbcType=VARCHAR},
      </if>
      <if test="code_root_value != null">
        code_root_value = #{code_root_value,jdbcType=VARCHAR},
      </if>
      <if test="code_group != null">
        code_group = #{code_group,jdbcType=VARCHAR},
      </if>
      <if test="aae100 != null">
        aae100 = #{aae100,jdbcType=VARCHAR},
      </if>
    </set>
    where code_type = #{code_type,jdbcType=VARCHAR}
	</update>
	
	
	<!-- 得到代码类型明细信息 -->
	<select id="getCodeTypeDetailInfo"  parameterType="String" resultType="CodeValue">
	select 
	    t.code_seq,
		t.code_type,
		t.code_value,
		t.code_name,
		t.code_group, 
		t.par_code_value,
		(select code_name from code_value c where c.code_value=t.par_code_value and c.code_type=t.code_type) par_code_name, 
		t.code_describe 
	from code_value t
	where code_seq=#{code_seq}
	</select>
	
	
	<!-- 通过代码值及代码类型获取代码明细,用于判断代码值是否会重复 -->
	<select id="getCodeTypeDetailByValue"  parameterType="String" resultType="CodeValue">
	select 
	    t.code_seq 
	from code_value t
	where code_value=#{code_value} and code_type=#{code_type}
	</select>
	
	<!-- 新增代码明细 -->
	<insert id="addCodeTypeDetail" parameterType="CodeValue" >
	   <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="code_seq"> 
            SELECT sys_guid() from dual 
     </selectKey>
	   insert into code_value(code_seq,code_type,code_value,code_name,par_code_value,code_describe)
	   values (#{code_seq},#{code_type},#{code_value}, #{code_name},#{par_code_value},#{code_describe})
	</insert>
	
	<!-- 更新代码明细-->
	<update id="updateCodeTypeDetail" parameterType="CodeType" >
	update code_type
	<set>
      <if test="code_name != null">
        code_name = #{code_name,jdbcType=VARCHAR},
      </if>
      <if test="code_describe != null">
        code_describe = #{code_describe,jdbcType=VARCHAR},
      </if>
    </set>
    where code_seq = #{code_seq,jdbcType=VARCHAR}
	</update>

    <!-- 通过代码类型删除代码 -->	
	<delete id="deleteCodeTypeByType" parameterType="String">
	   delete from code_type t where t.code_type=#{code_type}
	</delete>
	
	<!-- 通过代码类型删除全部代码值 -->
	<delete id="deleteCodeValueByType" parameterType="String">
	   delete from code_value t where t.code_type=#{code_type}
	</delete>

	
	<!-- 通过代码类型删除全部代码值 -->
	<delete id="deleteCodeValueBySeq" parameterType="String">
	   delete from code_value t where t.code_seq=#{code_seq}
	</delete>
	
	
	<!-- 分页查询代码分类 -->
	<select id="getCodeTypeSortList"  parameterType="CodeTypeSort" resultType="CodeTypeSort">
	 select 
         type_sort_id,
		 type_sort_code,
		 type_sort_name,
		 type_sort_desc,
		 type_sort_order
     from CODE_TYPE_SORT order by type_sort_order 
	</select>
	
	<!-- 通过编号获取代码分类 -->
	<select id="getCodeTypeSortByid"  parameterType="String" resultType="CodeTypeSort">
	 select 
	     type_sort_id,
		 type_sort_code,
		 type_sort_name,
		 type_sort_desc,
		 type_sort_order
     from CODE_TYPE_SORT where type_sort_id=#{type_sort_id}
	</select>
	
	<!-- 新增参数 -->
	<insert id="addCodeTypeSort" parameterType="CodeTypeSort" >
	   insert into CODE_TYPE_SORT(
	       type_sort_id,
		   type_sort_code,
		   type_sort_name,
		   type_sort_desc,
		   type_sort_order
	   )
	   values (
	       #{type_sort_id},
		   #{type_sort_code},
		   #{type_sort_name},
		   #{type_sort_desc},
		   #{type_sort_order}
	   )
	</insert>
	
	<!-- 更新参数信息 -->
	<update id="updateCodeTypeSort" parameterType="CodeTypeSort" >
	     update  
	        CODE_TYPE_SORT 
	     set 
	       type_sort_code=#{type_sort_code},
	       type_sort_name=#{type_sort_name},
	       type_sort_desc=#{type_sort_desc},
	       type_sort_order=#{type_sort_order}
	     where type_sort_id=#{type_sort_id}
	</update>

    <!-- 通过参数id删除参数信息 -->	
	<delete id="deleteCodeTypeSort" parameterType="String">
	     delete from CODE_TYPE_SORT where type_sort_id=#{type_sort_id}
	</delete>
</mapper>