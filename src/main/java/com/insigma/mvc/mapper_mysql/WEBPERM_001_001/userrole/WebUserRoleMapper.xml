<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.insigma.mvc.dao.WEBPERM_001_001.userrole.WebUserRoleMapper">
    <!-- 查询机构树数据 -->
    <select id="getAllGroupList"  resultType="SGroup" parameterType="String">
		 <![CDATA[ 
		 select groupid id ,
		 isparent,
		 t.groupname  name 
		 from (
		 select 
		 a.groupid,
		 a.groupname, 
		 decode(sign((select count(*) from s_group s where s.parentid=a.groupid)),'1','true','false') isparent 
		 from s_group a where a.parentid=#{parentid}  order by a.groupid ) t
		 ]]> 
	</select>
	
	<!-- 通过机构id获取机构信息 -->
	<select id="getGroupDataById" resultType="SGroup" parameterType="String">
	    select groupid,groupname,description from s_group t where t.groupid=#{groupid}
	</select>
	
	<!-- 通过机构类型获取机构信息 -->
	<select id="getGroupListByType" resultType="SGroup" parameterType="String">
	    select groupid,groupname,description from s_group t where t.grouptype=#{grouptype}
	</select>
	
	
	<!-- 通过机构id获取用户列表 -->
	<select id="getUserListByGroupid" resultType="SUser" parameterType="String">
	     select b.userid,
		      b.username,
		      b.email,
		      b.mobile,
		      b.ismainaccount ,
		      b.isblacklist, 
		      decode(sign((select count(*) from s_user_role t where t.userid=b.userid)),'1','true','false') isgrant
		      from s_group a,s_user b,s_usergroupref c  
	      where 
	      a.groupid=c.groupid 
	      and b.userid=c.userid 
	      and a.groupid=#{groupid}
	</select>
	
	<!-- 判断用户是否选择对应的角色 -->
	<select id="getUserRoleByUserId" resultType="SRole" parameterType="String">
	    select 
		    roleid,
		    rolename,
		    rolecode,
	        roledescribe, 
	        (select aaa103 from v_aa10 t where t.aaa100='SYSTYPECODE' and t.aaa102=systypecode) systypecode,
	        decode(sign((select count(*) from s_user_role s where s.roleid=t.roleid and  s.userid=#{userid})),'1','true','false') checked
        from s_role t 
	</select>
	<!-- 通过用户名查询用户信息 -->
	<select id="getSUserInfoById" resultType="SUser" parameterType="String">
	    select username from s_user t where t.username=#{username}
	</select>
	
	<!-- 通过机构名查询系统机构信息 -->
	<select id="getSysAgencyById" resultType="SGroup" parameterType="String">
	    select groupid,groupname from s_group t where t.name=#{name}
	</select>
	
	<!-- 通过组织ID查询是否有子节点信息 -->
	<select id="getSysAgencyForChildById" resultType="SGroup" parameterType="String">
	    select groupid,groupname from s_group t where t.parentid=#{groupid}
	</select>
	

    <!-- 通过用户id删除用户对应角色 -->	
	<delete id="deleteUserRoleByUserId" parameterType="String" >
	   delete t.* from s_user_role t where t.userid=#{userid}
	</delete>
	
	<!-- 通过组织id删除系统机构信息 -->	
	<delete id="deleteSysAgencyInfoByGroupId" parameterType="String" >
	   delete t.* from s_group t where t.groupid=#{groupid}
	</delete>
	
	<!-- 保存用户角色 -->
	<insert id="saveUserRole" parameterType="SRole">
	    <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="id"> 
            SELECT uuid()
        </selectKey>
	    insert into s_user_role(id,userid,roleid) values (#{id},#{userid},#{roleid})
	</insert>
	
	<!-- 保存用户信息 -->
	<insert id="saveSUserInfo" parameterType="SUser">
	    <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="userid"> 
            SELECT uuid()
        </selectKey>
	    insert into s_user(userid,password,username,enabled,usertype,ISBLACKLIST,ISMAINACCOUNT,ISCERTIFIED,fromaddr,REGISTTIME) 
	    values (#{userid},#{password},#{username},#{enabled},#{usertype},#{isblacklist},#{ismainaccount},#{iscertified},'3',sysdate)
	</insert>
	
	<!-- 保存用户用户组信息 -->
	<insert id="saveSGroupUser" parameterType="SUser">
	    <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="usergroupid"> 
            SELECT uuid()
        </selectKey>
	    insert into S_USERGROUPREF(usergroupid,userid,groupid) values (#{usergroupid},#{userid},#{groupid})
	</insert>
	
	<!-- 密码重置 -->
	<update id="passReset" parameterType="SUser">
	      update s_user t set t.password=#{password} where t.userid=#{userid}
	</update>
	
</mapper>